module control (enter, speed, stop, clk, state, enter_out, speed_out, speed_enable);
	input stop, clk;
	input [2:0] enter, speed;
	output reg speed_enable;
	output reg [2:0] enter_out, speed_out;
	output reg [31:0] state;
	
	always@(posedge clk) begin
		case(state)
			0:
			begin
				speed_enable <= 0;
				speed_out <= speed;
				
				if(enter == 2'b111)
					state <= 1;
			end
			
			1:
			begin
				speed_enable <= 1;
				enter_out <= enter;
				
				if(stop)
					state <= 2;
			end
			
			2:
			begin
				speed_enable <= 1;
				enter_out <= enter;
				
				if(~stop)
					state <= 1;
				else if(enter[2])
					state <= 0;
			end
			
			default:
				state <= 0;
		endcase
	end
endmodule